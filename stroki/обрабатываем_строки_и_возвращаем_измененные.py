# обрабатываем строковые данные и возвращаем их с первыми заглавными буквами в каждом слове.

stroka = 'иванов иван иваныч'
stroka_list = list(stroka)  # записываем нашу строку в список, т.к. нам потом надо будет в ней менять символы,
# а в питоне строку менять нельзя, это неизменяемый тип, зато можно перевести строку в список, поменять, что надо,
# а потом перевести получившийся список обратно в строку
# После обработки данных код должен выводить: "Иванов Иван"

# логика следующая сначала проверяем, что у нас в первом символе именно буква, если буква, то всегда делаем заглавным
# первый символ,
# потом циклом ищем, на каком месте строки у нас пробел,
# сохраняем индекс этого символа в переменную, потом делаем символ, который идет за пробелом заглавным и начинаем
# проверять дальше начиная с этого символа

if stroka_list[0].isalpha() == True:  # проверяем, что первый символ это буква, если да, то
    stroka_list[0] = stroka_list[0].upper()  # делаем его большим

# дальше ищем, на каком месте у нас пробел, т.е. какой индекс у этого символа
current_probel_index = stroka.find(' ')
# print(current_probel_index)  # индекс первого пробела для теста
# проверяем следующий после пробела символ на букву, если буква, то делаем символ большим

if stroka_list[current_probel_index + 1].isalpha() == True:  # проверяем, что первый символ это буква, если да, то
    stroka_list[current_probel_index + 1] = stroka_list[current_probel_index + 1].upper()  # делаем его большим

# дальше снова проверяем, какой индекс у следущего пробела, начинаем проверку с прошлого пробела, если пробела не
# будет, то вернется -1
current_probel_index = stroka.find(' ', current_probel_index + 1, )

if current_probel_index != -1:  # проверяем, если вернулось не минус 1
    if stroka_list[current_probel_index + 1].isalpha() == True:  # проверяем, что первый символ это буква, если да, то
        stroka_list[current_probel_index + 1] = stroka_list[current_probel_index + 1].upper()  # делаем его большим

# print(current_probel_index)  # индекс следующего пробела для теста

stroka = ''.join(stroka_list)  # записываем получившийся список обратно в строку
# print(stroka_list)  # результат в виде списка
print(stroka)  # результат в виде строки
