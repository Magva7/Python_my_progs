#copy() - поверхностная копия списка, при присвоении переменной копии списка, значение данного списка не изменяется в
# случае изменения первого. Если переменной присвоить список через "=", тогда значение этой переменной будет меняться
# при изменении оригинала

"""копируем список через copy """
original_list = ['l', 'i', 's', 't']  # наш оригинальный список
copy_list = original_list.copy()  # его копия

# # выводим текущие значения
print(original_list)  # выведет ['l', 'i', 's', 't']
print(copy_list)  # выведет ['l', 'i', 's', 't']

original_list.reverse()  # разворачиваем в обратную сторону изначальный список

# выводим значения после разворота изначального списка
print(original_list)  # выведет ['t', 's', 'i', 'l']
print(copy_list)  # выведет выведет ['l', 'i', 's', 't'], т.е. изменился только изначальный список, а копия не менялась

""" присваиваем новому списку значение через = """
# original_list = ['l', 'i', 's', 't']  # наш оригинальный список
# copy_list = original_list  # его копия
#
# # выводим текущие значения
# print(original_list)  # выведет ['l', 'i', 's', 't']
# print(copy_list)  # выведет ['l', 'i', 's', 't']
#
# original_list.reverse()  # разворачиваем в обратную сторону изначальный список
#
# # выводим значения после разворота изначального списка
# print(original_list)  # выведет ['t', 's', 'i', 'l']
# print(copy_list)  # выведет ['t', 's', 'i', 'l'], т.е. списки у нас меняются сразу оба, если меняем первый




# >>> var = ['l', 'i', 's', 't']
# >>> asd = var.copy()
# >>> print(asd)
# ['l', 'i', 's', 't']
# >>> print(var)
# ['l', 'i', 's', 't']
# >>> var.reverse()
# >>> print(asd)
# ['l', 'i', 's', 't']
# >>> print(var)
# ['t', 's', 'i', 'l']